#include <stdio.h>
#include<stdlib.h>

struct node{
    int info;
    struct node *left,*right;
};

struct node* createnode(int data){
    struct node *newnode;
    newnode=(struct node*)malloc(sizeof(struct node));
    
    newnode->info=data;
    newnode->left=NULL;
    newnode->right=NULL;
    
    return newnode;
}

void mirror(struct node *root)
{
    struct node *temp;
    
    if(root!=NULL)
    {
        //post order traversal of a tree gives mirror image of a tree
       mirror(root->left);  //for traversing left subtree
       
       mirror(root->right);  //for traversing right subtree
       
       //swap left and right child after traversal for miror image of original tree
       temp=root->left;
       root->left=root->right;
       root->right=temp;
    }
}    
void inorder(struct node *root){
    if(root==NULL)
    {
        return;
    }
    
    inorder(root->left);
    printf("%d\t",root->info);
    inorder(root->right);
    
}

int main()
{
    struct node *root;
    root=createnode(1);
    root->left = createnode(2);
    root->right = createnode(6);
    root->left->left=createnode(5);
    inorder(root);
    mirror(root);
    printf("\n");
    inorder(root);
    

    return 0;
}
